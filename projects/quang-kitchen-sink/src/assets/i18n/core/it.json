{
  "codeeditor": {
    "html": "",
    "code": ""
  },
  "checkbox": {
    "html": "<form [formGroup]=\"group\">\n  <quang-input-checkbox\n    [formName]=\"'form'\"\n    formControlName=\"checkbox\">\n  </quang-input-checkbox>\n</form>",
    "code": "group: FormGroup = new FormGroup({\n  checkbox: new FormControl(null, Validators.required)\n})"
  },
  "color": {
    "html": "<form [formGroup]=\"group\">\n  <quang-input-color\n    [formName]=\"'form'\"\n    formControlName=\"color\">\n  </quang-input-color>\n</form>",
    "code": "group: FormGroup = new FormGroup({\n    color: new FormControl(null, Validators.required)\n})"
  },
  "email": {
    "html": "<form [formGroup]=\"group\">\n  <quang-input-email\n    [formName]=\"'form'\"\n    formControlName=\"email\">\n  </quang-input-email>\n</form>",
    "code": "group: FormGroup = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email])\n})"
  },
  "email-min-max": {
    "html": "<form [formGroup]=\"groupMinMax\">\n  <quang-input-email\n    [min]=\"0\"\n    [max]=\"50\"\n    [formName]=\"'form'\"\n    formControlName=\"email\">\n  </quang-input-email>\n</form>",
    "code": "groupMinMax: FormGroup = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email])\n})"
  },
  "file": {
    "html": "<quang-input-file\n              [label]=\"'form.file.label'\"\n              [errorMessage]=\"true\"\n              [successMessage]=\"true\"\n              [helpMessage]=\"true\"\n              [tabIndex]=\"1\"\n              [id]=\"'file id'\"\n              [formName]=\"'form'\"\n              [buttonLabel]=\"'form.file.button.label'\"\n              [buttonClass]=\"['btn', 'btn-outline-secondary']\"\n              formControlName=\"file\">\n              <i uploadIcon class=\"fas fa-upload\"></i>\n            </quang-input-file>",
    "code": "group: FormGroup = new FormGroup({\n    file: new FormControl(null, Validators.required)\n})"
  },
  "file-multi": {
    "html": "<form [formGroup]=\"groupMulti\">\n  <quang-input-file\n    [formName]=\"'form'\"\n    [multiple]=\"true\"\n    [buttonLabel]=\"'form.file.button.label'\"\n    [buttonClass]=\"['btn', 'btn-outline-secondary']\"\n    formControlName=\"file\">\n  </quang-input-file>\n</form>",
    "code": "groupMulti: FormGroup = new FormGroup({\n    file: new FormControl(null, Validators.required)\n})"
  },
  "fraction": {
    "html": " <form [formGroup]=\"group\">\n            <quang-input-fraction\n              [label]=\"'form.fraction.label'\"\n              [errorMessage]=\"true\"\n              [successMessage]=\"true\"\n              [helpMessage]=\"true\"\n              [autocomplete]=\"'off'\"\n              [tabIndex]=\"1\"\n              [id]=\"'fraction id'\"\n              [autofocus]=\"true\"\n              [formName]=\"'form'\"\n              [addButtonClass]=\"['btn','btn-outline-success']\"\n              [removeButtonClass]=\"['btn','btn-outline-danger']\"\n              formControlName=\"fraction\">\n              <i addIntegerIcon class=\"fas fa-plus\"></i>\n              <i removeIntegerIcon class=\"fas fa-minus\"></i>\n              <i addFractionIcon class=\"fas fa-plus\"></i>\n              <i removeFractionIcon class=\"fas fa-minus\"></i>\n            </quang-input-fraction>\n          </form>",
    "code": "group: FormGroup = new FormGroup({\n    fraction: new FormControl(null, Validators.required)\n})"
  },
  "number": {
    "html": "<form [formGroup]=\"group\">\n  <quang-input-number\n    [formName]=\"'form'\"\n    [step]=\"1\"\n    formControlName=\"number\"\n  ></quang-input-number>\n</form>",
    "code": "group: FormGroup = new FormGroup({\n    number: new FormControl('', Validators.required)\n})"
  },
  "number-min-max": {
    "html": "<form [formGroup]=\"groupMinMax\">\n  <quang-input-number\n    [min]=\"0\"\n    [max]=\"50\"\n    [formName]=\"'form'\"\n    [step]=\"1\"\n    formControlName=\"number\"\n  ></quang-input-number>\n</form>",
    "code": "groupMinMax: FormGroup = new FormGroup({\n    number: new FormControl('', [Validators.required, Validators.min(0), Validators.max(50)])\n})"
  },
  "password": {
    "html": "<form [formGroup]=\"group\">\n  <quang-input-password\n    [formName]=\"'form'\"\n    [buttonClass]=\"['btn','btn-outline-secondary']\"\n    [viewPassword]=\"true\"\n    formControlName=\"password\"\n  >\n    <i iconHide class=\"fas fa-eye-slash\"></i>\n    <i iconView class=\"fas fa-eye\"></i>\n  </quang-input-password>\n</form>",
    "code": "group: FormGroup = new FormGroup({\n    password: new FormControl('', Validators.required)\n})"
  },
  "password-min-max": {
    "html": "<form [formGroup]=\"group\">\n  <quang-input-password\n    [min]=\"0\"\n    [max]=\"50\"\n    [formName]=\"'form'\"\n    [buttonClass]=\"['btn','btn-outline-secondary']\"\n    [viewPassword]=\"true\"\n    formControlName=\"password\"\n  >\n    <i iconHide class=\"fas fa-eye-slash\"></i>\n    <i iconView class=\"fas fa-eye\"></i>\n  </quang-input-password>\n</form>",
    "code": "groupMinMax: FormGroup = new FormGroup({\n    password: new FormControl(\n      '',\n      [Validators.required, Validators.minLength(0), Validators.maxLength(50)]\n    )\n})"
  },
  "radio": {
    "html": "<form [formGroup]=\"group\">\n  <quang-input-radio\n    [radioList]=\"list\"\n    [labelValue]=\"'text'\"\n    [returnValue]=\"'value'\"\n    [groupName]=\"'radio-group'\"\n    [formName]=\"'form'\"\n    formControlName=\"radio\">\n  </quang-input-radio>\n</form>",
    "code": "list = [\n    { value: 1, text: 'Item 1' },\n    { value: 2, text: 'Item 2' },\n    { value: 3, text: 'Item 3' },\n    { value: 4, text: 'Item 4' },\n    { value: 5, text: 'Item 5' }\n  ]\n\n  group: FormGroup = new FormGroup({\n    radio: new FormControl(null, Validators.required)\n})"
  },
  "search": {
    "html": "<form [formGroup]=\"group\">\n  <quang-input-search\n    [min]=\"0\"\n    [max]=\"50\"\n    [formName]=\"'form'\"\n    formControlName=\"search\">\n  </quang-input-search>\n</form>",
    "code": "group: FormGroup = new FormGroup({\n    search: new FormControl(null, Validators.required)\n})"
  },
  "tel": {
    "html": "<form [formGroup]=\"group\">\n  <quang-input-tel\n    [min]=\"9\"\n    [max]=\"10\"\n    [formName]=\"'form'\"\n    formControlName=\"tel\"\n  ></quang-input-tel>\n</form>",
    "code": "group: FormGroup = new FormGroup({\n    tel: new FormControl(\n      '',\n      [Validators.required, Validators.minLength(9), Validators.maxLength(10)]\n    )\n})"
  },
  "text": {
    "html": "<form [formGroup]=\"groupMinMax\">\n  <quang-input-text\n    [min]=\"0\"\n    [max]=\"50\"\n    [formName]=\"'form'\"\n    formControlName=\"text\"\n  ></quang-input-text>\n</form>",
    "code": "group: FormGroup = new FormGroup({\n    text: new FormControl(\n      '',\n      [Validators.required, Validators.minLength(0), Validators.maxLength(50)]\n    )\n})"
  },
  "url": {
    "html": "<form [formGroup]=\"group\">\n  <quang-input-url\n    [min]=\"0\"\n    [max]=\"50\"\n    [formName]=\"'form'\"\n    formControlName=\"url\"\n  ></quang-input-url>\n</form>",
    "code": "group: FormGroup = new FormGroup({\n    url: new FormControl(\n      '',\n      [Validators.required, Validators.minLength(0), Validators.maxLength(50)]\n    )\n})"
  },
  "multi-select-obj": {
    "html": "<form [formGroup]=\"group\">\n  <quang-multi-select-obj\n    [formName]=\"'form'\"\n    [list]=\"list\"\n    [returnValue]=\"'value'\"\n    [labelValue]=\"'text'\"\n    formControlName=\"items\">\n  </quang-multi-select-obj>\n</form>",
    "code": "list = [\n    { value: 1, text: 'Item 1' },\n    { value: 2, text: 'Item 2' },\n    { value: 3, text: 'Item 3' },\n    { value: 4, text: 'Item 4' },\n    { value: 5, text: 'Item 5' }\n  ]\n\n  group: FormGroup = new FormGroup({\n    items: new FormControl(null, Validators.required)\n})"
  },
  "multi-select-strg": {
    "html": "<form [formGroup]=\"group\">\n  <quang-multi-select-strg\n    [formName]=\"'form'\"\n    [list]=\"list\"\n    formControlName=\"items\">\n  </quang-multi-select-strg>\n</form>",
    "code": "list = ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5']\n\n  group: FormGroup = new FormGroup({\n    items: new FormControl(null, Validators.required)\n})"
  },
  "paginator": {
    "html": " <quang-paginator\n              [tabIndex]=\"1\"\n              [id]=\"'paginator id'\"\n              [totalItems]=\"list.length\"\n              [pageIndex]=\"0\"\n              [pageSize]=\"10\"\n              (whenPageChange)=\"pageChange($event)\"\n              (whenSizeChange)=\"sizeChange($event)\"\n              [sizeList]=\"sizeList\">\n            </quang-paginator>",
    "code": "size = 10\n  page = 0\n  sizeList = [10, 15, 25, 50]\n  list = Array(100).map((v, i) => ({ value: i, text: `Item${i}` }))\n\n  pageChange (p: number): void {\n    this.page = p\n  }\n\n  sizeChange (s: number): void {\n    this.size = s\n  }"
  },
  "select-obj": {
    "html": "<form [formGroup]=\"group\">\n  <quang-select-obj\n    [formName]=\"'form'\"\n    [list]=\"list\"\n    [returnValue]=\"'value'\"\n    [labelValue]=\"'text'\"\n    formControlName=\"item\">\n  </quang-select-obj>\n</form>",
    "code": "list = [\n  { value: 1, text: 'Item 1' },\n  { value: 2, text: 'Item 2' },\n  { value: 3, text: 'Item 3' },\n  { value: 4, text: 'Item 4' },\n  { value: 5, text: 'Item 5' }\n]\n\ngroup: FormGroup = new FormGroup({\n  item: new FormControl(null, Validators.required)\n})"
  },
  "select-strg": {
    "html": "<form [formGroup]=\"group\">\n  <quang-select-strg\n    [formName]=\"'form'\"\n    [list]=\"list\"\n    formControlName=\"item\">\n  </quang-select-strg>\n</form>",
    "code": "list = ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5']\n\ngroup: FormGroup = new FormGroup({\n    item: new FormControl(null, Validators.required)\n})"
  },
  "slider": {
    "html": "<form [formGroup]=\"group\">\n  <quang-slider\n    [formName]=\"'form'\"\n    [minValue]=\"0\"\n    [maxValue]=\"100\"\n    [interval]=\"10\"\n    formControlName=\"slider\">\n  </quang-slider>\n</form>",
    "code": "group: FormGroup = new FormGroup({\n    slider: new FormControl(null, Validators.required)\n})"
  },
  "slider-vert": {
    "html": "<form [formGroup]=\"groupVert\">\n  <quang-slider\n    [formName]=\"'form'\"\n    [minValue]=\"0\"\n    [maxValue]=\"100\"\n    [interval]=\"10\"\n    [vertical]=\"true\"\n    formControlName=\"slider\">\n  </quang-slider>\n</form>",
    "code": "groupVert: FormGroup = new FormGroup({\n    slider: new FormControl(null, Validators.required)\n})"
  },
  "textarea": {
    "html": "<form [formGroup]=\"group\">\n  <quang-text-area\n    [min]=\"0\"\n    [max]=\"50\"\n    [cols]=\"10\"\n    [rows]=\"10\"\n    [formName]=\"'form'\"\n    formControlName=\"text\"\n  ></quang-text-area>\n</form>",
    "code": "group: FormGroup = new FormGroup({\n    text: new FormControl(\n      '',\n      [Validators.required, Validators.minLength(0), Validators.maxLength(500)]\n    )\n})"
  },
  "textarea-resize": {
    "html": "<form [formGroup]=\"groupResize\" >\n  <quang-text-area\n    [min]=\"0\"\n    [max]=\"50\"\n    [cols]=\"10\"\n    [rows]=\"10\"\n    [formName]=\"'form'\"\n    [autoResize]=\"true\"\n    [resizeMode]=\"'none'\"\n    formControlName=\"text\"\n  ></quang-text-area>\n</form>",
    "code": "groupResize: FormGroup = new FormGroup({\n    text: new FormControl(\n      '',\n      [Validators.required, Validators.minLength(0), Validators.maxLength(500)]\n    )\n})"
  },
  "texteditor": {
    "html": "",
    "code": "group: FormGroup = new FormGroup({\n    text: new FormControl(\n      '',\n      [Validators.required, Validators.minLength(0), Validators.maxLength(500)]\n    )\n})"
  },
  "texteditor-bars": {
    "html": "",
    "code": "groupBars: FormGroup = new FormGroup({\n    text: new FormControl(\n      '',\n      [Validators.required, Validators.minLength(0), Validators.maxLength(500)]\n    )\n})"
  },
  "texteditor-html": {
    "html": "",
    "code": "groupHtml: FormGroup = new FormGroup({\n    text: new FormControl(\n      '',\n      [Validators.required, Validators.minLength(0), Validators.maxLength(500)]\n    )\n  })"
  },
  "toggle": {
    "html": "<form [formGroup]=\"group\">\n  <quang-toggle\n    [formName]=\"'form'\"\n    formControlName=\"toggle\">\n  </quang-toggle>\n</form>",
    "code": "group: FormGroup = new FormGroup({\n    toggle: new FormControl(null, Validators.required)\n})"
  },
  "datalist": {
    "html": "<quang-datalist\n              [label]=\"'form.datalist.label'\"\n              [errorMessage]=\"true\"\n              [successMessage]=\"true\"\n              [helpMessage]=\"true\"\n              [tabIndex]=\"1\"\n              [id]=\"'test'\"\n              [autofocus]=\"true\"\n              [formName]=\"'form'\"\n              [list]=\"list\"\n              formControlName=\"select\"\n            ></quang-datalist>",
    "code": " list = ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5']\n  group: FormGroup = new FormGroup({\n    select: new FormControl(\n      '',\n      [Validators.required]\n    )\n  })"
  },
  "paginatorService": {
    "html": "<table class=\"table\">\n            <thead>\n            <tr>\n              <th>Valore</th>\n              <th>Testo</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let i of list\">\n              <td>{{i.value}}</td>\n              <td>{{i.text}}</td>\n            </tr>\n            </tbody>\n          </table>\n          <quang-paginator\n            [tabIndex]=\"1\"\n            [id]=\"'paginator id'\"\n            [totalItems]=\"all.length\"\n            [pageIndex]=\"0\"\n            [pageSize]=\"10\"\n            (whenPageChange)=\"pageChange($event)\"\n            (whenSizeChange)=\"sizeChange($event)\"\n            [sizeList]=\"sizeList\">\n          </quang-paginator>",
    "code": "  size = 10\n  page = 0\n  sizeList = [10, 15, 25, 50]\n  all = Array(100).fill('').map((v, i) => ({ value: i, text: `Item${i}` }))\n  list = this.paginatorService.getPage(this.all, this.page, this.size)\n\n  constructor (\n    private readonly paginatorService: QuixPaginatorService\n  ) {}\n\n  pageChange (p: number): void {\n    this.page = p\n    this.makePage()\n  }\n\n  sizeChange (s: number): void {\n    this.size = s\n    this.makePage()\n  }\n\n  makePage (): void {\n    this.list = this.paginatorService.getPage(this.all, this.page, this.size)\n  }"
  },
  "autocomplete-strg": {
    "html": "form [formGroup]=\"group\">\n            <quang-autocomplete-strg\n              [id]=\"'test'\"\n              [tabIndex]=\"1\"\n              [autofocus]=\"true\"\n              [errorMessage]=\"true\"\n              [helpMessage]=\"true\"\n              [successMessage]=\"true\"\n              [formName]=\"'form'\"\n              [dataList]=\"list\"\n              formControlName=\"text\"\n            ></quang-autocomplete-strg>\n          </form>",
    "code": "list = [\n    'Iron Man',\n    'Capitan America',\n    'Thor',\n    'Hulk',\n    'Vedova Nera',\n    ' Occhio di Falco',\n    ' War Machine',\n    ' Falcon',\n    'Visione',\n    'Scarlet',\n    'Quicksilver'\n  ]\n  group: FormGroup = new FormGroup({\n    text: new FormControl(\n      '',\n      [Validators.required]\n    )\n  })"
  },
  "autocomplete-strg-async": {
    "html": "<quang-autocomplete-strg-async\n              [id]=\"'test'\"\n              [tabIndex]=\"1\"\n              [autofocus]=\"true\"\n              [errorMessage]=\"true\"\n              [helpMessage]=\"true\"\n              [successMessage]=\"true\"\n              [formName]=\"'form'\"\n              [apiUrl]=\"'assets/data/heroes.json'\"\n              [baseUrl]=\"'./'\"\n              formControlName=\"text\"\n            ></quang-autocomplete-strg-async>",
    "code": "group: FormGroup = new FormGroup({\n    text: new FormControl(\n      '',\n      [Validators.required]\n    )\n  })"
  },
  "autocomplete-obj": {
    "html": "<quang-autocomplete-obj\n              [id]=\"'test'\"\n              [tabIndex]=\"1\"\n              [autofocus]=\"true\"\n              [errorMessage]=\"true\"\n              [helpMessage]=\"true\"\n              [successMessage]=\"true\"\n              [formName]=\"'form'\"\n              [dataList]=\"list\"\n              [returnValue]=\"'key'\"\n              [searchBy]=\"'name'\"\n              formControlName=\"key\"\n            ></quang-autocomplete-obj>",
    "code": "list = [\n    {key: 1, name: 'Dark Phoenix'},\n    {key: 2, name: 'Ultron'},\n    {key: 3, name: 'Galactus'},\n    {key: 4, name: 'Thanos'},\n    {key: 5, name: 'Juggernaut'}\n  ];\n  group: FormGroup = new FormGroup({\n    key: new FormControl(\n      '',\n      [Validators.required]\n    )\n  })\n"
  },
  "autocomplete-obj-async": {
    "html": "<quang-autocomplete-obj-async\n              [id]=\"'test'\"\n              [tabIndex]=\"1\"\n              [autofocus]=\"true\"\n              [errorMessage]=\"true\"\n              [helpMessage]=\"true\"\n              [successMessage]=\"true\"\n              [formName]=\"'form'\"\n              [searchBy]=\"'name'\"\n              [returnValue]=\"'key'\"\n              [apiUrl]=\"'assets/data/villain.json'\"\n              [baseUrl]=\"'./'\"\n              formControlName=\"key\"\n            ></quang-autocomplete-obj-async>",
    "code": "group: FormGroup = new FormGroup({\n    key: new FormControl(\n      4,\n      [Validators.required]\n    )\n  })"
  },
  "download": {
    "html": "<button class=\"btn btn-primary\"\n                  [url]=\"'/kitchen-sink/assets/images/core/header.png'\"\n                  [contentType]=\"'image/png'\"\n                  [accept]=\"'image/png'\"\n                  quangAuthDownload\n          >\n            Download\n          </button>"
  },
  "image": {
    "html": "<img [src]=\"'/kitchen-sink/assets/images/core/header.png'\"\n               quangAuthImage\n          >"
  },
  "customIcons": {
    "html": "<i class=\"fab fa-4k mx-2\"></i>",
    "code": "import { library, dom, IconDefinition, IconName } from '@fortawesome/fontawesome-svg-core'\n\n  fa4k: IconDefinition = {\n    prefix: 'fab',\n    iconName: '4k' as IconName,\n    icon: [\n      10,\n      10,\n      [],\n      'e003',\n      ['M4.807 5.001C4.021 6.298 3.203 7.6 2.5 8.917v.971h2.905V11h1.112V9.888h.733V8.93h-.733V5.001h-1.71zm-1.23 3.93v-.032a46.781 46.781 0 0 1 1.766-3.001h.062V8.93H3.577zm9.831-3.93h-1.306L9.835 7.687h-.057V5H8.59v6h1.187V9.075l.615-.699L12.072 11H13.5l-2.232-3.415 2.14-2.584z',\n      'M14 3a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12zM2 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H2z']\n    ]\n  }\n\n  getIcons (): void {\n    library.add(this.fa4k)\n    dom.watch()\n  }\n\n  ngOnInit() {\n    this.getIcons()\n  }"
  }
}
