{
  "control": {
    "html": " <div class=\"form-group\">\n            <input type=\"text\"\n                   class=\"form-control\"\n                   [formControl]=\"control\">\n          </div>",
    "code": "control: FormControl = new FormControl('')"
  },
  "group": {
    "html": " <form [formGroup]=\"group\">\n            <div class=\"form-group\">\n              <label for=\"text\">Text</label>\n              <input type=\"text\"\n                     id=\"text\"\n                     class=\"form-control\"\n                     formControlName=\"text\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"number\">number</label>\n              <input type=\"number\"\n                     id=\"number\"\n                     class=\"form-control\"\n                     formControlName=\"number\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input type=\"email\"\n                     id=\"email\"\n                     class=\"form-control\"\n                     formControlName=\"email\">\n            </div>\n          </form>",
    "code": "group: FormGroup = new FormGroup({\n    text: new FormControl(''),\n    number: new FormControl(0),\n    email: new FormControl('')\n  })"
  },
  "group-group": {
    "html": "<form [formGroup]=\"group\">\n            <div class=\"form-group\">\n              <label for=\"name\">Nome</label>\n              <input type=\"text\"\n                     id=\"name\"\n                     class=\"form-control\"\n                     formControlName=\"name\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"surname\">Cognome</label>\n              <input type=\"text\"\n                     id=\"surname\"\n                     class=\"form-control\"\n                     formControlName=\"surname\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"age\">Età</label>\n              <input type=\"number\"\n                     id=\"age\"\n                     class=\"form-control\"\n                     formControlName=\"age\">\n            </div>\n            <ng-container formGroupName=\"locale\">\n              <div class=\"form-group\">\n                <label for=\"address\">Indirizzo</label>\n                <input type=\"text\"\n                       id=\"address\"\n                       class=\"form-control\"\n                       formControlName=\"address\">\n              </div>\n              <div class=\"form-group\">\n                <label for=\"city\">Città</label>\n                <input type=\"text\"\n                       id=\"city\"\n                       class=\"form-control\"\n                       formControlName=\"city\">\n              </div>\n              <div class=\"form-group\">\n                <label for=\"country\">Nazione</label>\n                <input type=\"text\"\n                       id=\"country\"\n                       class=\"form-control\"\n                       formControlName=\"country\">\n              </div>\n            </ng-container>\n          </form>",
    "code": "group: FormGroup = new FormGroup({\n    name: new FormControl(''),\n    surname: new FormControl(''),\n    age: new FormControl(0),\n    locale: new FormGroup({\n      address: new FormControl(''),\n      city: new FormControl(''),\n      country: new FormControl(''),\n    })\n  })"
  },
  "group-array": {
    "html": "<form [formGroup]=\"group\"\n                class=\"mt-3\">\n            <ng-container formArrayName=\"array1\">\n              <div class=\"form-group\"\n                   *ngFor=\"let input of array1.controls; let i = index\">\n                <label [htmlFor]=\"'array1 ' + i\">\n                  Array1 text {{i}}\n                </label>\n                <input type=\"text\"\n                       [id]=\"'array1 ' + i\"\n                       [formControlName]=\"i\"\n                       class=\"form-control\">\n              </div>\n            </ng-container>\n            <ng-container formArrayName=\"array2\">\n              <div class=\"form-group\"\n                   *ngFor=\"let input of array2.controls; let i = index\">\n                <label [htmlFor]=\"'array2 ' + i\">\n                  Array2 text {{i}}\n                </label>\n                <input type=\"text\"\n                       [id]=\"'array2 ' + i\"\n                       class=\"form-control\">\n              </div>\n            </ng-container>\n          </form>",
    "code": "  group: FormGroup = new FormGroup({\n    array1: new FormArray([]),\n    array2: new FormArray([])\n  })\n\n  get array1 (): FormArray {\n    return this.group.controls.array1 as FormArray\n  }\n\n  get array2 (): FormArray {\n    return this.group.controls.array2 as FormArray\n  }\n\n  addArray1 (): void {\n    this.array1.push(new FormControl(''))\n  }\n\n  addArray2 (): void {\n    this.array2.push(new FormControl(''))\n  }\n\n  removeArray1 (): void {\n    this.array1.removeAt(this.array1.length - 1)\n  }\n\n  removeArray2 (): void {\n    this.array2.removeAt(this.array2.length - 1)\n  }"
  },
  "array": {
    "html": "<form [formGroup]=\"group\">\n            <ng-container formArrayName=\"array\">\n              <div *ngFor=\"let input of array.controls; let i = index\"\n                   class=\"form-group\">\n                <label [htmlFor]=\"'text' + i\">Text {{i}}</label>\n                <input type=\"text\"\n                       [id]=\"'text' + i\"\n                       class=\"form-control\"\n                       [formControlName]=\"i\">\n              </div>\n            </ng-container>\n          </form>",
    "code": "group: FormGroup = new FormGroup({\n    array: new FormArray([\n      new FormControl('')\n    ])\n  })\n\n  get array (): FormArray {\n    return this.group.controls.array as FormArray\n  }\n\n  addControl (): void {\n    this.array.push(new FormControl(''))\n  }\n\n  removeControl (): void {\n    this.array.removeAt(this.array.length - 1)\n  }"
  },
  "array-group": {
    "html": "<form [formGroup]=\"group\">\n            <ng-container formArrayName=\"array\">\n              <div *ngFor=\"let input of array.controls; let i = index\"\n                   [formGroupName]=\"i\">\n                <div class=\"form-group\">\n                  <label [htmlFor]=\"'name' + i\">Nome {{i}}</label>\n                  <input type=\"text\"\n                         [id]=\"'name' + i\"\n                         class=\"form-control\"\n                         formControlName=\"name\">\n                </div>\n                <div class=\"form-group\">\n                  <label [htmlFor]=\"'surname' + i\">Cognome {{i}}</label>\n                  <input type=\"text\"\n                         [id]=\"'surname' + i\"\n                         class=\"form-control\"\n                         formControlName=\"surname\">\n                </div>\n              </div>\n            </ng-container>\n          </form>",
    "code": "group: FormGroup = new FormGroup({\n    array: new FormArray([\n      new FormGroup({\n        name: new FormControl(''),\n        surname: new FormControl('')\n      })\n    ])\n  })\n\n  get array (): FormArray {\n    return this.group.controls.array as FormArray\n  }\n\n  addGroup (): void {\n    this.array.push(new FormGroup({\n      name: new FormControl(''),\n      surname: new FormControl('')\n    }))\n  }\n\n  removeGroup (): void {\n    this.array.removeAt(this.array.length - 1)\n  }"
  },
  "array-array": {
    "html": "<form [formGroup]=\"group\">\n            <button class=\"btn btn-outline-success\"\n                    (click)=\"addArray()\">\n              Aggiungi Array\n            </button>\n            <div *ngFor=\"let a of groupKey\"\n                 class=\"first-level\"\n                 [formArrayName]=\"a\">\n              <p>Array 1° livello, n°{{a}}</p>\n              <button class=\"btn btn-outline-success\"\n                      (click)=\"addSubArray(a)\">\n                Aggiungi sub array\n              </button>\n              <div *ngFor=\"let s of getArray(a).controls;let i = index\"\n                   class=\"second-level\"\n                   [formArrayName]=\"i\">\n                <p>Array 2° livello, n°{{i}}</p>\n                <button class=\"btn btn-outline-success\"\n                        (click)=\"addArrayControl(a,i)\">\n                  Aggiungi control\n                </button>\n                <div class=\"form-group\" *ngFor=\"let c of getArrayControl(a,i).controls; let y = index\">\n                  <label [htmlFor]=\"'control'+a+i+y\">Control n°{{y}}</label>\n                  <input [id]=\"'control'\"\n                         [formControlName]=\"y\"\n                         class=\"form-control\"\n                         type=\"text\">\n                </div>\n              </div>\n            </div>\n          </form>",
    "code": "group: FormGroup = new FormGroup({})\n\n  addArray (): void {\n    this.group.addControl(Object.keys(this.group.controls).length.toString(), new FormArray([]))\n  }\n\n  get groupKey (): string[] {\n    return Object.keys(this.group.controls)\n  }\n\n  addArrayControl (index: string, subIndex: number): void {\n    ((this.group.controls[index] as FormArray).controls[subIndex] as FormArray).push(new FormControl())\n  }\n\n  addSubArray (index: string): void {\n    (this.group.controls[index] as FormArray).push(new FormArray([]))\n  }\n\n  getArray (index: string): FormArray {\n    return this.group.controls[index] as FormArray\n  }\n\n  getArrayControl (index: string, subIndex: number): FormArray {\n    return (this.group.controls[index] as FormArray).controls[subIndex] as FormArray\n  }"
  },
  "sync-validator": {
    "form": {
      "firstName": {
        "label": "Nome",
        "ph": "Scrivi il tuo nome..."
      },
      "lastName": {
        "label": "Cognome",
        "ph": "Scrivi il tuo cognome..."
      },
      "email": {
        "label": "Email",
        "ph": "Scrivi la tua email..."
      },
      "checkbox": {
        "label": "Accetto i termini di servizio"
      }
    },
    "html": "<form [formGroup]=\"group\" (submit)=\"save()\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <quang-input-text\n                  [label]=\"'form.async-validator.form.firstName.label'\"\n                  [placeholder]=\"'form.async-validator.form.firstName.ph'\"\n                  [ariaLabel]=\"'form.form.firstName.form.label'\"\n                  [errorMessage]=\"true\"\n                  [successMessage]=\"true\"\n                  [autocomplete]=\"'off'\"\n                  [id]=\"'firstName id'\"\n                  [autofocus]=\"true\"\n                  [formName]=\"'form.async-validator'\"\n                  [min]=\"0\"\n                  [max]=\"50\"\n                  formControlName=\"firstName\"\n                ></quang-input-text>\n                <quang-input-text\n                  [label]=\"'form.async-validator.form.lastName.label'\"\n                  [placeholder]=\"'form.async-validator.form.lastName.ph'\"\n                  [ariaLabel]=\"'form.async-validator.form.lastName.label'\"\n                  [errorMessage]=\"true\"\n                  [successMessage]=\"true\"\n                  [autocomplete]=\"'off'\"\n                  [id]=\"'lastName id'\"\n                  [autofocus]=\"true\"\n                  [formName]=\"'form.async-validator'\"\n                  [min]=\"0\"\n                  [max]=\"50\"\n                  formControlName=\"lastName\"\n                ></quang-input-text>\n                <quang-input-email\n                  [label]=\"'form.async-validator.form.email.label'\"\n                  [placeholder]=\"'form.async-validator.form.email.ph'\"\n                  [ariaLabel]=\"'form.async-validator.form.email.label'\"\n                  [errorMessage]=\"true\"\n                  [successMessage]=\"true\"\n                  [autocomplete]=\"'off'\"\n                  [id]=\"'email id'\"\n                  [autofocus]=\"true\"\n                  [formName]=\"'form.async-validator'\"\n                  [min]=\"0\"\n                  [max]=\"50\"\n                  formControlName=\"email\"\n                ></quang-input-email>\n                <div class=\"row\">\n                  <div class=\"col-6\">\n                    <quang-input-checkbox\n                      [label]=\"'form.async-validator.form.checkbox.label'\"\n                      [ariaLabel]=\"'form.async-validator.form.checkbox.label'\"\n                      [errorMessage]=\"true\"\n                      [successMessage]=\"true\"\n                      [id]=\"'consent id'\"\n                      [autofocus]=\"true\"\n                      [formName]=\"'form.async-validator'\"\n                      formControlName=\"checkbox\"\n                    ></quang-input-checkbox>\n                  </div>\n                  <div class=\"col-6 text-end\">\n                    <button\n                      type=\"submit\"\n                      class=\"btn btn-primary\"\n                    >Salva\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>",
    "ts": "  group: FormGroup = new FormGroup({\n    firstName: new FormControl('',{\n      validators: [Validators.required, this.validateInput()]\n    }),\n    lastName: new FormControl('',\n      [Validators.required, this.validateInput()]\n    ),\n    email: new FormControl('',\n      [Validators.required, this.validateInput()]\n    ),\n    checkbox: new FormControl(null,\n      [Validators.required]\n    )\n  })\n\n  validateInput (): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if(control.value.toString().toLowerCase().includes('mario')) {\n        return { validInput: true }\n      }\n      return null\n    }\n  }"
  },
  "async-validator": {
    "form": {
      "firstName": {
        "label": "Nome",
        "ph": "Scrivi il tuo nome...",
        "required": "Campo obbligatorio",
        "exist": "Nome già esistente",
        "valid": "Nome valido"
      },
      "lastName": {
        "label": "Cognome",
        "ph": "Scrivi il tuo cognome..."
      },
      "email": {
        "label": "Email",
        "ph": "Scrivi la tua email..."
      },
      "checkbox": {
        "label": "Accetto i termini di servizio"
      }
    },
    "html": "<form [formGroup]=\"group\" (submit)=\"save()\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <quang-input-text\n                  [label]=\"'form.async-validator.form.firstName.label'\"\n                  [placeholder]=\"'form.async-validator.form.firstName.ph'\"\n                  [ariaLabel]=\"'form.form.firstName.form.label'\"\n                  [errorMessage]=\"true\"\n                  [successMessage]=\"true\"\n                  [autocomplete]=\"'off'\"\n                  [id]=\"'firstName id'\"\n                  [autofocus]=\"true\"\n                  [formName]=\"'form.async-validator'\"\n                  [min]=\"0\"\n                  [max]=\"50\"\n                  formControlName=\"firstName\"\n                ></quang-input-text>\n                <quang-input-text\n                  [label]=\"'form.async-validator.form.lastName.label'\"\n                  [placeholder]=\"'form.async-validator.form.lastName.ph'\"\n                  [ariaLabel]=\"'form.async-validator.form.lastName.label'\"\n                  [errorMessage]=\"true\"\n                  [successMessage]=\"true\"\n                  [autocomplete]=\"'off'\"\n                  [id]=\"'lastName id'\"\n                  [autofocus]=\"true\"\n                  [formName]=\"'form.async-validator'\"\n                  [min]=\"0\"\n                  [max]=\"50\"\n                  formControlName=\"lastName\"\n                ></quang-input-text>\n                <quang-input-email\n                  [label]=\"'form.async-validator.form.email.label'\"\n                  [placeholder]=\"'form.async-validator.form.email.ph'\"\n                  [ariaLabel]=\"'form.async-validator.form.email.label'\"\n                  [errorMessage]=\"true\"\n                  [successMessage]=\"true\"\n                  [autocomplete]=\"'off'\"\n                  [id]=\"'email id'\"\n                  [autofocus]=\"true\"\n                  [formName]=\"'form.async-validator'\"\n                  [min]=\"0\"\n                  [max]=\"50\"\n                  formControlName=\"email\"\n                ></quang-input-email>\n                <div class=\"row\">\n                  <div class=\"col-6\">\n                    <quang-input-checkbox\n                      [label]=\"'form.async-validator.form.checkbox.label'\"\n                      [ariaLabel]=\"'form.async-validator.form.checkbox.label'\"\n                      [errorMessage]=\"true\"\n                      [successMessage]=\"true\"\n                      [id]=\"'consent id'\"\n                      [autofocus]=\"true\"\n                      [formName]=\"'form.async-validator'\"\n                      formControlName=\"checkbox\"\n                    ></quang-input-checkbox>\n                  </div>\n                  <div class=\"col-6 text-end\">\n                    <button\n                      type=\"submit\"\n                      class=\"btn btn-primary\"\n                    >Salva\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>",
    "ts": "'component:'\ngroup: FormGroup = new FormGroup({\n    firstName: new FormControl('',\n      {\n        validators: Validators.required,\n        asyncValidators: [this.AsyncValidatorService.validate.bind(this.AsyncValidatorService)]\n      }),\n    lastName: new FormControl('',\n      {\n        validators: Validators.required,\n      }),\n    email: new FormControl('',\n      {\n        validators: Validators.required,\n      }),\n    checkbox: new FormControl(null,\n      {\n        validators: Validators.required\n      }),\n  })\n\n\n'service:'\n  validate (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return of(control.value).pipe(\n      map((resp: string | string[]) => resp.toString().toLowerCase().includes('mario') ? { exist: true } : null),\n      delay(2000)\n    )\n  }\n}"
  }
}
